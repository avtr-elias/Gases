@model Gases.Models.GData
@using Gases.Controllers
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["View"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/moment.js/moment.js"></script>
<script src="~/lib/chart.js/Chart.js"></script>
<link href="~/lib/ol/ol.css" rel="stylesheet" />
<script src="~/lib/ol/ol.js"></script>

<style>
    #map {
        position: relative;
    }
    .legendMain {
        background-color: rgba(255, 255, 255, .8);
        width: 100px;
        height: 300px;
        position: absolute;
        z-index: 1;
        right: 10px;
        top: 10px;
    }
    .legendGradient {
        display: inline-block;
        background: linear-gradient(to top, #FFFFB2, #BD0026);
        width: 30px;
        height: 280px;
        margin: 10px 5px 10px 10px;
    }
    .legendLabels {
        display: inline-block;
        width: 35px;
        height: 280px;
        margin: 10px 10px 10px 0;
        position: relative;
    }
    #topValue {
        display: inline;
        position: absolute;
    }
    #midValue {
        display: inline;
        position: absolute;
        top: 47%;
    }
    #bottomValue {
        display: inline;
        position: absolute;
        bottom: 0;
    }
</style>

<h2>@SharedLocalizer["View"]</h2>

<div class="row">
    <div>
        <form asp-action="Upload" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="GDataTypeId" class="control-label"></label>
                <select id="selectDT" asp-for="GDataTypeId" class="form-control" asp-items="ViewBag.GDataTypeId" onchange="ChangeDataType(); GetDatas();"></select>
            </div>
            <div class="form-group">
                <label asp-for="GaseId" class="control-label"></label>
                <select asp-for="GaseId" class="form-control" asp-items="ViewBag.GaseId" onchange="GetDatas();"></select>
            </div>
            <div id="VS" class="form-group">
                <label asp-for="VerticalSlice" class="control-label"></label>
                @*<input asp-for="VerticalSlice" class="form-control" onchange="GetDatas();" />*@
                <select asp-for="VerticalSlice" class="form-control" asp-items="ViewBag.VerticalSlice" onchange="GetDatas();"></select>
                @*<span asp-validation-for="VerticalSlice" class="text-danger"></span>*@
            </div>
            <div id="Region" class="form-group">
                <label asp-for="RegionId" class="control-label"></label>
                <select asp-for="RegionId" class="form-control" asp-items="ViewBag.RegionId" onchange="GetDatas();"></select>
            </div>
            <div id="YearDiv" class="form-group">
                <label asp-for="Year" class="control-label"></label>
                @*<input asp-for="Year" class="form-control" onchange="GetDatas();" />*@
                <select asp-for="Year" class="form-control" asp-items="ViewBag.Year" onchange="GetDatas();"></select>
                @*<span asp-validation-for="Year" class="text-danger"></span>*@
            </div>
            <div id="MonthDiv" class="form-group">
                <label asp-for="Month" class="control-label"></label>
                @*<input asp-for="Month" class="form-control" onchange="GetDatas();" />*@
                <select asp-for="Month" class="form-control" asp-items="ViewBag.Month" onchange="GetDatas();"></select>
                @*<span asp-validation-for="Month" class="text-danger"></span>*@
            </div>
            <div id="SeasonDiv" class="form-group">
                <label asp-for="Season" class="control-label"></label>
                @*<input asp-for="Season" class="form-control" />*@
                <select asp-for="Season" class="form-control" onchange="GetDatas();" asp-items='Html.GetEnumSelectList<Season>().Select(c => {c.Text = SharedLocalizer[c.Text]; return c;}).ToList()'></select>
            </div>
            <div id="chart" class="col-sm-12">
                <canvas id="chartDatas"></canvas>
            </div>
            <div id="map">
                <div class="legendMain" id="legend">
                    <div class="legendGradient"></div>
                    <div class="legendLabels">
                        <div id="topValue"></div>
                        <div id="midValue"></div>
                        <div id="bottomValue"></div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div hidden="hidden">
    <input id="Years" value="@SharedLocalizer["Year"]" />
    <input id="Months" value="@SharedLocalizer["Month"]" />
    <input id="Value" value="@SharedLocalizer["Value"]" />
    <input id="VerticalSlices" value="@SharedLocalizer["VerticalSlice"]" />
</div>

<script type="text/javascript">
    var layers = [];
    layers.push(new ol.layer.Tile({
        source: new ol.source.OSM()
    }));
    layers[0].set('name', 'OSM');

    var geoserverPort = '8080',
        geoserverAddress = window.location.hostname;

    var Source_New = new ol.source.TileWMS({
        url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/Gases/wms?',
        //params: {
        //    'LAYERS': 'Gases:No',
        //    'VERSION': '1.1.0',
        //    'FORMAT': 'image/png',
        //    'TILED': true
        //},
        serverType: 'geoserver'
    });
    var Layer_New = new ol.layer.Tile({
        source: Source_New
    });
    Layer_New.setOpacity(0.80);
    layers.push(Layer_New);

    var source = new ol.source.Vector();
    var layer = new ol.layer.Vector({
        source: source
    });

    var map = new ol.Map({
        target: 'map',
        layers: layers,
        view: new ol.View({
            center: ol.proj.fromLonLat([69, 48]),
            zoom: 4
        })
    });
</script>

<script type="text/javascript">

    function ChangeDataType() {
        var sel = document.getElementById('selectDT');
        var val = sel.options[sel.selectedIndex].value;
        if (val == 3) {
            document.getElementById('VS').style.display = "none";
        }
        else {
            document.getElementById('VS').style.display = "block";
        }

        if (val == 4) {
            document.getElementById('YearDiv').style.display = "none";
            document.getElementById('MonthDiv').style.display = "block";
            document.getElementById('SeasonDiv').style.display = "none";
        }
        else if (val == 5) {
            document.getElementById('YearDiv').style.display = "none";
            document.getElementById('MonthDiv').style.display = "none";
            document.getElementById('SeasonDiv').style.display = "block";
        }
        else {
            document.getElementById('YearDiv').style.display = "block";
            document.getElementById('MonthDiv').style.display = "none";
            document.getElementById('SeasonDiv').style.display = "none";
        }

        if (val == 2 || val == 4 || val == 5) {
            document.getElementById('Region').style.display = "none";
        }
        else {
            document.getElementById('Region').style.display = "block";
        }

        if (val == 2) {
            document.getElementById('map').style.display = "block";
            document.getElementById('chart').style.display = "none";
        }
        else {
            document.getElementById('map').style.display = "none";
            document.getElementById('chart').style.display = "block";
        }
    }

    function GetDatas() {
        var sel = document.getElementById('selectDT');
        var gDataTypeIdValue = sel.options[sel.selectedIndex].value;
        $.ajax({
            url: '@Url.Action("GetDatas")',
            data: {
                GDataTypeId: gDataTypeIdValue,
                GaseId: $('#GaseId').val(),
                VerticalSlice: $('#VerticalSlice').val(),
                RegionId: $('#RegionId').val(),
                Year: $('#Year').val(),
                Month: $('#Month').val(),
                Season: $('#Season').val()
            },
            type: 'POST',
            success: function (data) {
                if (gDataTypeIdValue == 2) {
                    ChangeLayer(data);
                }
                else {
                    ChangeChart(data, gDataTypeIdValue);
                }
            },
            error: function () {
                //alert('Error');
            }
        })
    }

    var ChartDatas = null;
    function ChangeChart(data, gDataTypeIdValue) {
        if (ChartDatas != null) {
            ChartDatas.destroy();
        }
        var units = "";
        if ($('#GaseId').val() == 1 || $('#GaseId').val() == 5 || $('#GaseId').val() == 6) {
            units = "ppbv";
        }
        if ($('#GaseId').val() == 2) {
            units = "ppm";
        }
        if ($('#GaseId').val() == 4) {
            units = "1/cm2";
        }
        if ($('#GaseId').val() == 7) {
            units = "gm/kg";
        }
        var ctx1 = document.getElementById("chartDatas").getContext('2d');
        var data1 = [];
        if (gDataTypeIdValue == 1) {
            for (var i = 0; i < data.length; i++) {
                if (data[i].month < 10) {
                    var date = data[i].year + '-0' + data[i].month + '-' + "01T00:00:00";
                }
                else {
                    var date = data[i].year + '-' + data[i].month + '-' + "01T00:00:00";
                }
                data1.push({
                    'x': moment(date),
                    'y': data[i].value
                });
            }
            ChartDatas = new Chart(ctx1, {
                type: 'scatter',
                data: {
                    datasets: [{
                        label: $("#GaseId option:selected").text(),
                        data: data1,
                        backgroundColor: 'rgba(85,255,0,1)',
                        borderColor: 'rgba(85,255,0,1)',
                        borderWidth: 3,
                        fill: false,
                        showLine: true,
                        lineTension: 0
                    }]
                },
                options: {
                    spanGaps: true,
                    title: {
                        display: true,
                        text: $("#selectDT  option:selected").text()
                    },
                    scales: {
                        xAxes: [{
                            type: "time",
                            time: {
                                unit: 'month'
                            },
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: $("#Months").val()
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: $("#Value").val() + ', ' + units
                            }
                        }]
                    }
                }
            });
        }
        if (gDataTypeIdValue == 3) {
            var values = [];
            var verticalSlices = [];
            for (var i = data.length - 1; i > -1; i--) {
                values.push(data[i].value);
                verticalSlices.push(data[i].verticalSlice);
            }
            ChartDatas = new Chart(ctx1, {
                type: 'line',
                data: {
                    labels: values,
                    datasets: [{
                        label: $("#GaseId option:selected").text(),
                        data: verticalSlices,
                        backgroundColor: 'rgba(85,255,0,1)',
                        borderColor: 'rgba(85,255,0,1)',
                        borderWidth: 3,
                        fill: false,
                        showLine: true,
                        lineTension: 0
                    }]
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: $("#selectDT  option:selected").text()
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: $("#Value").val() + ', ' + units
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: $("#VerticalSlices").val() + ', hPa'
                            },
                            type: 'logarithmic',
                            ticks: {
                                reverse: true,
                                autoSkip: true,
                                precision: 4,
                                callback: function (verticalSlices, index, values) {
                                    if (verticalSlices == 1 || verticalSlices == 10 || verticalSlices == 100 || verticalSlices == 1000) {
                                        return Number(verticalSlices.toString());
                                    }
                                    else {
                                        return '';
                                    }
                                }
                            }
                        }]
                    }
                }
            });
        }
        if (gDataTypeIdValue == 4 || gDataTypeIdValue == 5) {
            for (var i = 0; i < data.length; i++) {
                var date = data[i].year + '-01-01T00:00:00';
                data1.push({
                    'x': moment(date),
                    'y': data[i].value
                });
            }
            ChartDatas = new Chart(ctx1, {
                type: 'scatter',
                data: {
                    datasets: [{
                        label: $("#GaseId option:selected").text(),
                        data: data1,
                        backgroundColor: 'rgba(85,255,0,1)',
                        borderColor: 'rgba(85,255,0,1)',
                        borderWidth: 3,
                        fill: false,
                        showLine: true,
                        lineTension: 0
                    }]
                },
                options: {
                    spanGaps: true,
                    title: {
                        display: true,
                        text: $("#selectDT  option:selected").text()
                    },
                    scales: {
                        xAxes: [{
                            type: "time",
                            time: {
                                unit: 'year'
                            },
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: $("#Years").val()
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: $("#Value").val() + ', ' + units
                            }
                        }]
                    }
                }
            });
        }
    }

    function ChangeLayer(data) {
        var nameFile = '';
        //var name = [];
        //name = data;
        //for (i = 0; i < name.length; i++) {
        //    nameFile += data[i][0];
        //}
        nameFile = data.name;
        var min = data.minVal;
        var max = data.maxVal;
        $('#topValue').text(max.toFixed(2));
        $('#midValue').text(((max + min) / 2).toFixed(2));
        $('#bottomValue').text(min.toFixed(2));
        var Source_New = new ol.source.TileWMS({
            url: 'http://' + geoserverAddress + ':' + geoserverPort + '/geoserver/Gases/wms?',
            params: {
                'LAYERS': 'Gases:' + nameFile,
                'VERSION': '1.1.0',
                'ENV': 'low:' + min + ';high:' + max,
                'FORMAT': 'image/png',
                'TILED': true
            },
            serverType: 'geoserver'
        });
        //console.log(Source_New);
        var l = map.getLayers().getArray()[1];
        if (Source_New.params_.LAYERS.length > 6) {
            l.setOpacity(1);
            l.setSource(Source_New);
        }
        else {
            l.setOpacity(0);
        }
    }

    $(document).ready(function () {
        ChangeDataType();
        GetDatas();
    });
</script>

@*<script>
    ns4 = (document.layers) ? true : false
    ie4 = (document.all) ? true : false

    var mouse_x = 0;
    var mouse_y = 0;

    function init() {
        if (ns4) { document.captureEvents(Event.MOUSEMOVE); }
        document.onmousemove = mousemove;
    }
    function mousemove(event) {
        if (!event) {
            var event = window.event;
        }

        if (event.pageX || event.pageY) {
            mouse_x = event.pageX;
            mouse_y = event.pageY;
        } else if (event.clientX || event.clientY) {
            mouse_x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
            mouse_y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;
        }
    }

    map.on('singleclick', function (evt) {
        var viewResolution = (map.getView().getResolution());
        var url = layers[1].getSource().getGetFeatureInfoUrl(
            evt.coordinate, viewResolution, 'EPSG:3857',
            {
                'INFO_FORMAT': 'text/javascript'
                //'FEATURE_COUNT': '10000'
            });
        if (url) {
            var parser = new ol.format.GeoJSON();
            $.ajax({
                jsonp: false,
                jsonpCallback: 'getJson',
                type: 'GET',
                url: url + "&format_options=callback:getJson",
                async: false,
                dataType: 'jsonp',
                //jsonpCallback: 'parseResponse',
                error: function (xhr, status, error) {
                }
            }).then(function (response) {
                var result = parser.readFeatures(response);
                if (result.length > 0) {
                    var value;
                    value = result[0].get('GRAY_INDEX');
                    var div = document.createElement('div');
                    div.style.position = 'absolute';
                    div.style.left = mouse_x + 'px';   // Координаты дива X и Y не забываем указать еденицы измерения,
                    div.style.top = (mouse_y - 20) + 'px';    // например 40px или 20%
                    div.style.background = 'white';   //  Див с белой заливкой
                    div.appendChild(document.createTextNode(value + ' ppm'));  //  Добавим текст в див
                    document.body.appendChild(div);   //  Добавим наш див на страницу
                    $("body").append(div);
                    setTimeout(function () {
                        div.remove();
                    }, 3000)
                }
            })
        }
    })

    init()
</script>*@

<script type="text/javascript">
        ns4 = (document.layers) ? true : false
        ie4 = (document.all) ? true : false

        var mouse_x = 0;
        var mouse_y = 0;

        function init() {
            if (ns4) { document.captureEvents(Event.MOUSEMOVE); }
            document.onmousemove = mousemove;
        }
        function mousemove(event) {
            if (!event) {
                var event = window.event;
            }

            if (event.pageX || event.pageY) {
                mouse_x = event.pageX;
                mouse_y = event.pageY;
            } else if (event.clientX || event.clientY) {
                mouse_x = event.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
                mouse_y = event.clientY + document.body.scrollTop + document.documentElement.scrollTop;
            }
        }

        map.on('click', function (evt) {

            var coordinates = ol.proj.toLonLat(evt.coordinate);

            $.ajax({
                url: '@Url.Action("GetValue")',
                data: {
                    GaseId: $('#GaseId').val(),
                    Year: $('#Year').val(),
                    VerticalSlice: $('#VerticalSlice').val()
                },
                type: 'POST',
                success: function (data) {
                    var units = "";
                    if ($('#GaseId').val() == 1 || $('#GaseId').val() == 5 || $('#GaseId').val() == 6) {
                        units = "ppbv";
                    }
                    if ($('#GaseId').val() == 2) {
                        units = "ppm";
                    }
                    if ($('#GaseId').val() == 4) {
                        units = "1/cm2";
                    }
                    if ($('#GaseId').val() == 7) {
                        units = "gm/kg";
                    }

                    var longitude;
                    var latitude;
                    var differenceLongitude;
                    var differenceLatitude;
                    var minLongitude = 1000000;
                    var minLatitude = 1000000;
                    var selectLongitude;
                    var selectLatitude;
                    var value;
                    $.each(data, function (i) {
                        longitude = data[i]['longtitude'];
                        latitude = data[i]['latitude'];
                        differenceLongitude = Math.abs(coordinates[0] - longitude);
                        differenceLatitude = Math.abs(coordinates[1] - latitude);
                        if (differenceLongitude < minLongitude) {
                            minLongitude = differenceLongitude;
                            selectLongitude = longitude;
                        }
                        if (differenceLatitude < minLatitude) {
                            minLatitude = differenceLatitude;
                            selectLatitude = latitude;
                        }
                    });
                    $.each(data, function (i) {
                        longitude = data[i]['longtitude'];
                        latitude = data[i]['latitude'];
                        if ((longitude == selectLongitude) && (latitude == selectLatitude)) {
                            value = data[i]['value'].toFixed(2);
                        }
                    });
                    var div = document.createElement('div');
                    div.style.position = 'absolute';
                    div.style.left = mouse_x + 'px';   // Координаты дива X и Y не забываем указать еденицы измерения,
                    div.style.top = (mouse_y - 20) + 'px';    // например 40px или 20%
                    div.style.background = 'white';   //  Див с белой заливкой
                    div.appendChild(document.createTextNode(value + ' ' + units));  //  Добавим текст в див
                    document.body.appendChild(div);   //  Добавим наш див на страницу
                    $("body").append(div);
                    setTimeout(function () {
                        div.remove();
                    }, 3000)
                },
                error: function () {
                }
            });
        });

        init()
    </script>
